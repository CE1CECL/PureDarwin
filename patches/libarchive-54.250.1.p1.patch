diff -ru libarchive-54.250.1/libarchive/tar/read.c libarchive-54.250.1.mod/libarchive/tar/read.c
--- libarchive-54.250.1/libarchive/tar/read.c	2016-08-26 18:40:00.000000000 -0400
+++ libarchive-54.250.1.mod/libarchive/tar/read.c	2019-09-18 23:00:19.000000000 -0400
@@ -71,12 +71,12 @@
 
 #include <TargetConditionals.h>
 #if TARGET_OS_MAC && !TARGET_OS_IPHONE
-#define HAVE_QUARANTINE 1
+#define HAVE_QUARANTINE 0
 #endif /* TARGET_OS_MAC */
 
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 #include <quarantine.h>
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 
 #include "bsdtar.h"
 #include "err.h"
@@ -146,7 +146,7 @@
 	}
 }
 
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 void
 _qtnapply(struct bsdtar *bsdtar, qtn_file_t qf, char *path)
 {
@@ -166,7 +166,7 @@
 	if (qstatus)
 		lafe_warnc(0, "qtn_file_apply_to_path(%s): %s", path, qtn_error(qstatus));
 }
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 
 /*
  * Handle 'x' and 't' modes.
@@ -180,9 +180,9 @@
 	struct archive_entry	 *entry;
 	const struct stat	 *st;
 	int			  r;
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 	qtn_file_t		  qf = NULL;
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 	LIST_HEAD(copyfile_list_t, copyfile_list_entry_t) copyfile_list;
 	struct copyfile_list_entry_t *cle;
 
@@ -231,7 +231,7 @@
 #endif
 	}
 
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 	if (mode == 'x' && bsdtar->filename != NULL && !bsdtar->option_stdout) {
 		if ((qf = qtn_file_alloc()) != NULL) {
 			int qstatus = qtn_file_init_with_path(qf, bsdtar->filename);
@@ -241,7 +241,7 @@
 			}
 		}
 	}
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 
 	for (;;) {
 		/* Support --fast-read option */
@@ -385,11 +385,11 @@
 				}
 				r = archive_read_extract(a, entry,
 				    bsdtar->extract_flags);
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 				if (r == ARCHIVE_OK) {
 					_qtnapply(bsdtar, qf, (char *)archive_entry_pathname(entry));
 				}
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 			}
 			if (r != ARCHIVE_OK) {
 				if (!bsdtar->verbose)
@@ -418,16 +418,16 @@
 	LIST_FOREACH(cle, &copyfile_list, link) {
 		if (!bsdtar->disable_copyfile && copyfile(cle->tmp, cle->dst, 0, COPYFILE_UNPACK | COPYFILE_NOFOLLOW | COPYFILE_ACL | COPYFILE_XATTR) == 0) {
 			unlink(cle->tmp);
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 			_qtnapply(bsdtar, qf, cle->dst);
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 		} else {
 			if (!bsdtar->disable_copyfile)
 				lafe_warnc(errno, "copyfile unpack (%s) failed", cle->dst);
 			rename(cle->tmp, cle->src);
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 			_qtnapply(bsdtar, qf, cle->src);
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 		}
 	}
 
@@ -437,12 +437,12 @@
 
 	archive_read_finish(a);
 
-#ifdef HAVE_QUARANTINE
+/* #ifdef HAVE_QUARANTINE
 	if (qf != NULL) {
 		qtn_file_free(qf);
 		qf = NULL;
 	}
-#endif /* HAVE_QUARANTINE */
+#endif */ /* HAVE_QUARANTINE */
 }
