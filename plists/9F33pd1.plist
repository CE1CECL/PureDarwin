// !$*UTF8*$!
{
	"binary_sites" = (
		"http://puredarwin.googlecode.com/svn/Roots/9F33pd1/",
		"http://src.macosforge.org/Roots/9F33/",
	);
	"source_sites" = (
		"http://puredarwin.googlecode.com/svn/trunk/patches/",
		"http://src.macosforge.org/Projects/",
	);
	build = 9F33pd1;
	darwin = "Darwin 9.5";
	inherits = 9F33;
	environment = {
		"INSTALLED_PRODUCT_ASIDES" = YES;
		"MACOSX_DEPLOYMENT_TARGET" = "10.5";
		"NEXT_ROOT" = "";
		"RC_ARCHS" = "ppc i386";
		"RC_JASPER" = YES;
		"RC_NONARCH_CFLAGS" = "-pipe -no-cpp-precomp";
		"RC_OS" = macos;
		"RC_PRIVATE" = "/private";
		"RC_RELEASE" = Leopard;
		"RC_XBS" = YES;
		"SEPARATE_STRIP" = YES;
		"UNAME_RELEASE" = "9.5";
		"UNAME_SYSNAME" = Darwin;
	};
	groups = {
		boot = (
			"files Apple16X50Serial Apple3Com3C90x AppleAC97Audio AppleADBButtons AppleADBKeyboard AppleADBMouse AppleAPIC AppleBCM440XEthernet AppleBMacEthernet AppleCore99NVRAM AppleCore99PE AppleCuda AppleDP83816Ethernet AppleDisplays AppleFan AppleFileSystemDriver AppleFlashNVRAM AppleGMACEthernet AppleGPIO AppleGenericPCATA AppleGracklePCI AppleHWSensor AppleHeathrow AppleI2C AppleI2S AppleI386GenericPlatform AppleI386PCI AppleIntel8255x AppleIntelPIIXATA AppleK2SATA AppleK2SATARoot AppleKauaiATA AppleKeyLargo AppleKeyswitch AppleKiwiATA AppleKiwiRoot AppleMPIC AppleMTRRSupport AppleMacRISC2PE AppleMacRISC4PE AppleMacRiscPCI AppleMediaBay AppleOnboardAudio AppleOnboardPCATA ApplePCCard16ATA ApplePCCardATA ApplePS2Controller ApplePS2Keyboard ApplePS2Mouse ApplePS2Trackpad AppleRAID AppleRS232Serial AppleRTL8139Ethernet AppleSCCSerial AppleSMBIOS AppleSym8xx AppleTalk AppleThermal AppleUSBAudio AppleUSBCDCDriver AppleUSBIrDA AppleVIA AppleVIAATA BootX CF CMD646ATA CommonCrypto Csu DarwinTools DirectoryService DiskArbitration DynamicPowerStep HeathrowATA ICU IOACPIFamily IOADBFamily IOATAFamily IOATAPIProtocolTransport IOAudioFamily IOCDStorageFamily IODVDStorageFamily IOFWDVComponents IOFireWireAVC IOFireWireFamily IOFireWireIP IOFireWireSBP2 IOFireWireSerialBusProtocolTransport IOGraphics IOHIDFamily IOI2CFamily IOKitTools IOKitUser IONetworkingFamily IOPCCardFamily IOPCIFamily IOSCSIParallelFamily IOSerialFamily IOStorageFamily IOUSBFamily IOUSBMassStorageClass Kerberos KeyLargoATA Libc Libinfo Libkvm Libm Libnotify Librpcsvc Libstreams Libsystem Liby OpenSSH OpenSSL PowerManagement Security adv_cmds autofs automount awk bash basic_cmds bc bless boot bootp bootstrap_cmds bsm bzip2 cctools cddafs configd configd_executables configd_plugins diskdev_cmds disklabel doc_cmds drvAppleCMD646Root dyld file file_cmds gnudiff gnutar gnuzip gpt grep groff hfs ipv6configuration isoutil kext_tools keymgr ksh launchd less libedit libiconv libpcap libtelnet libxml2 libxslt lsof mail_cmds man memberd misc_cmds msdosfs nano ncurses netcat netinfo network_cmds ntfs ntp objc4 old_ncurses pam pam_modules passwordserver_sasl patch_cmds pdisk rsync screen security_authtrampoline security_certificates security_certtool security_crlrefresh security_dotmac_tp security_ocspd security_privportserver security_systemkeychain securityd shell_cmds srm sudo syslog system_cmds system_config tcpdump tcsh texi2html texinfo text_cmds top vim volfs xinetd xnu yacc zip zlib zsh DarwinInstaller ACard62xxM ACard67162 ACard671xSCSI ACard6885M ACard68xxM ATTOExpressPCI Adaptec78XXSCSI AdaptecBuiltDrivers AirPortDriver2 AppleACPIPlatform AppleBlower AppleBroadcom570X AppleCPUThermo AppleFCU AppleFPButton AppleFWAudio AppleFWOHCI AppleGossamerPE AppleHWClock AppleI2SModemFamily AppleIntel8254XEthernet AppleLED AppleLM87 AppleLMUController AppleLynx AppleMacRISC2PE AppleMacRISC4PE ApplePMU AppleRTL8169Ethernet AppleSEP AppleSMU AppleStorageDrivers Apple_DEC21x4Ethernet GraphicsDrivers IOATABlockStorage IOSCSIArchitectureModelFamily",
		);
		compilertools = (
			"gcc gcc_os gcc_42 gccfast cctools ld64",
		);
		nobuild = (
			"JBoss Chess IOFWDVComponents OpenAL WebCore blojsom",
		);
	};
	macosx = "Mac OS X 10.5.5";
	projects = {
		ACPIPS2Nub = {
			"source_sites" = (
				"http://puredarwin.googlecode.com/svn/Mirror/",
			);
			dependencies = {
				build = (
					"gcc_os",
					"gcc_select",
					gnumake,
				);
			};
			version = 1;
		};
		ApplePS2Controller = {
			"binary_sites" = (
				"http://src.macosforge.org/Roots/8A428/",
			);
			dependencies = {
				build = (
					"adv_cmds",
					awk,
					bash,
					cctools,
					cxxfilt,
					"file_cmds",
					"gcc_os",
					"gcc_select",
					"shell_cmds",
					"system_cmds",
					"text_cmds",
				);
				header = (
					ApplePS2Controller,
					xnu,
				);
				staticlib = (
					"gcc_os",
					xnu,
				);
			};
			version = 8;
		};
		ApplePS2Keyboard = {
			dependencies = {
				build = (
					"adv_cmds",
					awk,
					bash,
					cctools,
					cxxfilt,
					"file_cmds",
					"gcc_os",
					"gcc_select",
					"shell_cmds",
					"system_cmds",
					"text_cmds",
				);
				header = (
					ApplePS2Controller,
					IOGraphics,
					IOHIDFamily,
					xnu,
				);
				staticlib = (
					"gcc_os",
					xnu,
				);
			};
			version = 9;
		};
		ApplePS2Mouse = {
			dependencies = {
				build = (
					"adv_cmds",
					awk,
					bash,
					cctools,
					cxxfilt,
					"file_cmds",
					"gcc_os",
					"gcc_select",
					"shell_cmds",
					"system_cmds",
					"text_cmds",
				);
				header = (
					ApplePS2Controller,
					IOGraphics,
					IOHIDFamily,
					xnu,
				);
				staticlib = (
					"gcc_os",
					xnu,
				);
			};
			version = 10;
		};
		ApplePS2Trackpad = {
			dependencies = {
				build = (
					"adv_cmds",
					awk,
					bash,
					cctools,
					cxxfilt,
					"file_cmds",
					"gcc_os",
					"gcc_select",
					"shell_cmds",
					"system_cmds",
					"text_cmds",
				);
				header = (
					ApplePS2Controller,
					IOGraphics,
					IOHIDFamily,
					xnu,
				);
				staticlib = (
					"gcc_os",
					xnu,
				);
			};
			version = 9;
		};
		CF = {
			environment = {
				"RC_ARCHS" = i386;
			};
			patchfiles = (
				"CF-476.15.BuildCFLite.p1.patch",
				"CF-476.15.CFBundle_Resources.p1.patch",
			);
		};
		DirectoryService = {
			patchfiles = (
				"DirectoryService-514.23.dslockstat.d.p1.patch",
			);
		};
		IOHIDFamily = {
			environment = {
				"RC_ARCHS" = i386;
			};
			patchfiles = (
				"IOHIDFamily.IOHIDDeviceClass.cpp.p1.patch",
				"IOHIDFamily.IOHIDQueueClass.cpp.p1.patch",
				"IOHIDFamily.IOHIDUPSClass.cpp.p1.patch",
			);
		};
		IOKitUser = {
			environment = {
				"RC_ARCHS" = i386;
			};
			patchfiles = (
				"IOKitUser-388.2.1.p1.patch",
				"IOKitUser-388.2.1.PEFSupport.c.p1.patch",
				"IOKitUser-388.2.1.IOAccelSurfaceControl.c.p1.patch",
				"IOKitUser-388.2.1.IOGraphicsLib.c.p1.patch",
				"IOKitUser-388.2.1.IODisplayLib.c.p1.patch",
				"IOKitUser-388.2.1.IOPMPowerNotifications.c.p1.patch",
				"IOKitUser-388.2.1.IOPMAutoWake.c.p1.patch",
				"IOKitUser-388.2.1.IOPMLibPrivate.c.p1.patch",
				"IOKitUser-388.2.1.IOPMEnergyPrefs.c.p1.patch",
				"IOKitUser-388.2.1.IOPMRepeatingPower.c.p1.patch",
				"IOKitUser-388.2.1.IOPMUPSPrefs.c.p1.patch",
				"IOKitUser-388.2.1.IOPowerSources.c.p1.patch",
				"IOKitUser-388.2.1.IOPowerSourcesPrivate.c.p1.patch",
				"IOKitUser-388.2.1.IOSystemConfiguration.c.p1.patch",
				"IOKitUser-388.2.1.IOHIDEventSystem.c.p1.patch",
			);
		};
		Libsystem = {
			environment = {
				"RC_ARCHS" = i386;
			};
			patchfiles = ();
		};
		MacPorts = {
			"source_sites" = (
				"http://svn.macports.org/repository/macports/downloads/MacPorts-1.6.0",
			);
			version = "1.6.0";
		};
		"NullCPUPowerManagement" = {
			"source_sites" = (
				"http://tgwbd.org/darwin/downloads",
			);
			version = r11;
		};
		SystemStubs = {
			environment = {
				"RC_ARCHS" = "i386 x86_64 ppc ppc64";
			};
		};
		TargetConfig = {
			patchfiles = ();
		};
		bless = {
			dependencies = {
				build = (
					DiskArbitration,
					Libm,
					Libsystem,
					bash,
					cctools,
					distcc,
					"file_cmds",
					gcc,
					"gcc_os",
					"gcc_select",
					libgcc,
					"system_cmds",
				);
				header = (
					DiskArbitration,
					IONetworkingFamily,
					IOStorageFamily,
					IOUSBFamily,
					"Libc_headers",
					Libinfo,
					Libm,
					Libsyscall,
					architecture,
					gcc,
					libresolv,
					xnu,
				);
				lib = (
					DiskArbitration,
					Libsystem,
					dyld,
					libgcc,
				);
				staticlib = (
					Csu,
					SystemStubs,
				);
			};
			environment = {
				"RC_ARCHS" = "ppc ppc64 i386 x86_64";
			};
			version = "37.1.4";
		};
		boot = {
			dependencies = {
				build = (
					Libm,
					Libsystem,
					"adv_cmds",
					awk,
					bash,
					"bootstrap_cmds",
					cctools,
					cxxfilt,
					"file_cmds",
					files,
					"gcc_os",
					"gcc_select",
					gnumake,
					"shell_cmds",
					"system_cmds",
					"text_cmds",
				);
				header = (
					IOStorageFamily,
					"Libc_headers",
					architecture,
					"cctools_ofiles",
					"gcc_os",
					xnu,
				);
				staticlib = (
					Csu,
					"gcc_os",
				);
			};
			patchfiles = (
				"boot-132_dfe_r146.p0.patch",
				"boot-132_dfe_r122_pd1.p0.patch",
			);
			version = 132;
		};
		"bootstrap_cmds" = {
			environment = {
				"RC_ARCHS" = i386;
			};
			dependencies = {
				build = (
					flex,
				);
			};
		};
		configd = {
			environment = {
				"RC_ARCHS" = "ppc ppc64 i386 x86_64";
			};
			patchfiles = (
				"configd-212.2.SCNetworkConnection.c.p1.patch",
				"configd-212.2.SCNetworkConnectionPrivate.c.p1.patch",
				"configd-212.2.SCDPrivate.c.p1.patch",
				"configd-212.2.SCPrivate.h.p1.patch",
				"configd-212.2.SystemConfiguration.h.p1.patch",
				"configd-212.2.dy_framework.h.p1.patch",
			);
		};
		dtrace = {
			environment = {
				"RC_ARCHS" = i386;
			};
			dependencies = {
				build = (
					libelf,
					libdwarf,
				);
			};
			patchfiles = (
				"dtrace-48.dt_pid_apple.m.p1.patch",
				"dtrace-48.libproc.m.p1.patch",
				"dtrace-48.libproc_apple.h.p1.patch",
				"dtrace-48.dt_ld.m.p1.patch",
				"dtrace-48.project.pbxproj.p1.patch",
			);
		};
		"kext_tools" = {
			patchfiles = (
				"kext_tools-117.bootcaches.c.p1.patch",
				"kext_tools-117.prelink.c.p1.patch",
				"kext_tools-117.globals.h.p1.patch",
				"kext_tools-117.update_boot.c.p1.patch",
				"kext_tools-117.kextd_main.c.p1.patch",
				"kext_tools-117.watchvol.h.p1.patch",
				"kext_tools-117.project.pbxproj.p1.patch",
			);
		};
		keymaps = {
			"source_sites" = (
				"http://puredarwin.googlecode.com/svn/Mirror",
				"http://www.opensource.apple.com/darwinsource/tarballs/apsl",
			);
			version = 31;
		};
		launchd = {
			environment = {
				"RC_ARCHS" = i386;
			};
			dependencies = {
				header = (
					libedit,
				);
			};
			patchfiles = (
				"launchd-258.18.p1.patch",
			);
		};
		libdwarf = {
			dependencies = {
				build = (
					libelf,
				);
			};
			"source_sites" = (
				"http://puredarwin.googlecode.com/svn/Mirror",
				"http://reality.sgiweb.org/davea",
			);
			version = 8;
		};
		libelf = {
			"source_sites" = (
				"http://puredarwin.googlecode.com/svn/Mirror/",
				"http://www.mr511.de/software",
			);
			version = 3;
		};
		mDNSResponder = {
			environment = {
				"RC_ARCHS" = "i386 x86_64 ppc ppc64";
			};
			patchfiles = (
				"mDNSResponder-176.2.mDNSMacOSX.c.p1.patch",
				"mDNSResponder-176.2.daemon.c.p1.patch",
				"mDNSResponder-176.2.mDNSEmbeddedAPI.h.p1.patch",
				"mDNSResponder-176.2.uDNS.c.p1.patch",
				"mDNSResponder-176.2.uds_daemon.c.p1.patch",
				"mDNSResponder-176.2.helper.c.p1.patch",
				"mDNSResponder-176.2.helper-main.c.p1.patch",
			);
		};
		autozone = {
			environment = {
				"RC_ARCHS" = "i386 x86_64 ppc ppc64";
			};
		};
		objc4 = {
			environment = {
				"RC_ARCHS" = "i386 x86_64 ppc ppc64";
			};
			patchfiles = ();
		};
		pam = {
			environment = {
				"RC_ARCHS" = "i386 x86_64 ppc ppc64";
			};
		};
		"pam_modules" = {
			environment = {
				"RC_ARCHS" = "i386 x86_64 ppc ppc64";
			};
		};
		"pcsc-lite" = {
			"source_sites" = (
				"http://puredarwin.googlecode.com/svn/Mirror/",
			);
			version = "1.4.102";
		};
		ruby = {
			environment = {
				"RC_ARCHS" = i386;
			};
		};

		xnu = {
                        environment = {
                                "RC_ARCHS" = "x86_64";
			};	
		};
		zfs = {
			configuration = "Leopard_Release";
			dependencies = {
				lib = (
					Libsystem,
					dyld,
					libgcc,
					ncurses,
				);
			};
			environment = {
				"RC_ARCHS" = "i386 ppc";

			};
			"source_sites" = (
				"http://puredarwin.googlecode.com/svn/Mirror/",
			);
			version = "119";
		};
	};
}
